# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Set variable for Submodule
      run:  sudo apt-get install -y jq ;TEST_PATH=$(cat info.json | jq -r '.testPath');TEST_PROJECT=$(cat info.json | jq -r  '.testProject' ); echo $TEST_PROJECT ; echo $TEST_PATH ; git submodule add -f $TEST_PROJECT ${TEST_PATH}/external; pwd
    - name: setting up the runner
      run: mvn -Dmaven.test.failure.ignore=true -B package --file pom.xml ; cd  /home/runner/work/basic-sample-app ; git clone https://github.com/abishek-metadesign/junit-launcher-demo.git ; cd junit-launcher-demo/ ; mvn clean install;java -jar /home/runner/work/basic-sample-app/junit-launcher-demo/target/junit-launcher-demo-1.0-SNAPSHOT-jar-with-dependencies.jar /home/runner/work/basic-sample-app/basic-sample-app/target  https://b9bf-103-186-197-144.in.ngrok.io